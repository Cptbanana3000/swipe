// swipe/packages/shared/src/types/user.types.ts
export type UserRole = 'freelancer' | 'client';

export interface User {
    id: string;
    username: string;
    email: string;
    isVerifiedFreelancer: boolean;
    createdAt: Date;
    role: UserRole;
  }

  // NEW: Define the Project interface
export interface Project {
  _id?: string; // Optional: will be auto-generated by Mongoose subdocument
  title: string;
  description: string;
  technologies?: string[]; // Array of tech tags/skills used
  projectUrl?: string;    // Link to live project/demo
  repositoryUrl?: string; // Link to code repository (e.g., GitHub)
  // imageUrl?: string;   // Optional: for a project image, can add later
}

  
  export interface UserProfile extends User { // Example of extending an interface
  firstName?: string;
  lastName?: string;
  profilePictureUrl?: string;
  location?: string;
  headline?: string;
  bio?: string;
  skills?: string[];
  projects?: Project[];
  portfolioLinks?: string[];
  experienceLevel?: string;
  // Freelancer specific (optional for now)
  hourlyRate?: number;
  availability?: string;
  // Client specific (optional for now)
  companyName?: string;
  companyWebsite?: string;
  // Add other social links if needed, e.g., as an object
  socialLinks?: {
    linkedin?: string;
    github?: string;
    website?: string; // Personal portfolio or company site
  }
  ProfileSetupComplete?: boolean;
  role: UserRole;
  }